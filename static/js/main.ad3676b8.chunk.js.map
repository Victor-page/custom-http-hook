{"version":3,"sources":["components/UI/Section.module.css","components/Tasks/TaskItem.module.css","components/Tasks/Tasks.module.css","components/NewTask/TaskForm.module.css","components/UI/Section.js","components/Tasks/TaskItem.js","components/Tasks/Tasks.js","components/NewTask/TaskForm.js","hooks/use-http.js","components/NewTask/NewTask.js","App.js","index.js"],"names":["module","exports","Section","props","className","classes","section","children","TaskItem","task","Tasks","taskList","items","length","map","text","id","content","error","onClick","onFetch","loading","container","TaskForm","taskInputRef","useRef","form","onSubmit","event","preventDefault","enteredValue","current","value","trim","onEnterTask","type","ref","useHttp","useState","isLoading","setIsLoading","setError","sendRequest","useCallback","applyData","a","url","method","headers","body","fetch","JSON","stringify","response","ok","Error","json","data","message","NewTask","createTask","taskText","taskData","createdTask","name","onAddTask","bind","App","tasks","setTasks","fetchTasks","useEffect","tasksObj","loadedTasks","taskKey","push","Fragment","prevTasks","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ad3676b8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3DuEe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"task\":\"TaskItem_task__2mxrX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Tasks_container__3YpOL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"TaskForm_form__1GRnB\"};","import classes from './Section.module.css';\n\nconst Section = (props) => {\n  return <section className={classes.section}>{props.children}</section>;\n};\n\nexport default Section;\n","import classes from './TaskItem.module.css';\n\nconst TaskItem = (props) => {\n  return <li className={classes.task}>{props.children}</li>\n};\n\nexport default TaskItem;","import Section from '../UI/Section';\nimport TaskItem from './TaskItem';\nimport classes from './Tasks.module.css';\n\nconst Tasks = (props) => {\n  let taskList = <h2>No tasks found. Start adding some!</h2>;\n\n  if (props.items.length > 0) {\n    taskList = (\n      <ul>\n        {props.items.map((task) => (\n          <TaskItem key={task.id}>{task.text}</TaskItem>\n        ))}\n      </ul>\n    );\n  }\n\n  let content = taskList;\n\n  if (props.error) {\n    content = <button onClick={props.onFetch}>Try again</button>;\n  }\n\n  if (props.loading) {\n    content = 'Loading tasks...';\n  }\n\n  return (\n    <Section>\n      <div className={classes.container}>{content}</div>\n    </Section>\n  );\n};\n\nexport default Tasks;\n","import { useRef } from 'react';\n\nimport classes from './TaskForm.module.css';\n\nconst TaskForm = (props) => {\n  const taskInputRef = useRef();\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const enteredValue = taskInputRef.current.value;\n\n    if (enteredValue.trim().length > 0) {\n      props.onEnterTask(enteredValue);\n    }\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitHandler}>\n      <input type='text' ref={taskInputRef} />\n      <button>{props.loading ? 'Sending...' : 'Add Task'}</button>\n    </form>\n  );\n};\n\nexport default TaskForm;\n","import { useCallback, useState } from 'react';\r\n\r\nconst useHttp = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const sendRequest = useCallback(\r\n    async ({ url, method, headers, body }, applyData) => {\r\n      setIsLoading(true);\r\n      setError(null);\r\n      try {\r\n        const response = await fetch(url, {\r\n          method: method || 'GET',\r\n          body: body ? JSON.stringify(body) : null,\r\n          headers: headers || {},\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error('Request failed!');\r\n        }\r\n\r\n        const data = await response.json();\r\n        applyData(data);\r\n      } catch (err) {\r\n        setError(err.message || 'Something went wrong!');\r\n      }\r\n      setIsLoading(false);\r\n    },\r\n    []\r\n  );\r\n\r\n  return { isLoading, error, sendRequest };\r\n};\r\n\r\nexport default useHttp;\r\n","import Section from '../UI/Section';\nimport TaskForm from './TaskForm';\nimport useHttp from '../../hooks/use-http';\n\nconst NewTask = (props) => {\n  const { isLoading, error, sendRequest } = useHttp();\n\n  const createTask = (taskText, taskData) => {\n    const generatedId = taskData.name; // firebase-specific => \"name\" contains generated id\n    const createdTask = { id: generatedId, text: taskText };\n\n    props.onAddTask(createdTask);\n  };\n\n  const enterTaskHandler = (taskText) => {\n    const requestConfig = {\n      url: 'https://react-http-7aca5-default-rtdb.firebaseio.com/tasks.json',\n      method: 'POST',\n      body: { text: taskText },\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    sendRequest(requestConfig, createTask.bind(null, taskText));\n  };\n\n  return (\n    <Section>\n      <TaskForm onEnterTask={enterTaskHandler} loading={isLoading} />\n      {error && <p>{error}</p>}\n    </Section>\n  );\n};\n\nexport default NewTask;\n","import React, { useEffect, useState } from 'react';\n\nimport Tasks from './components/Tasks/Tasks';\nimport NewTask from './components/NewTask/NewTask';\nimport useHttp from './hooks/use-http';\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n\n  const { isLoading, error, sendRequest: fetchTasks } = useHttp();\n\n  useEffect(() => {\n    const requestConfig = {\n      url: 'https://react-http-7aca5-default-rtdb.firebaseio.com/tasks.json',\n    };\n\n    const transformTasks = (tasksObj) => {\n      const loadedTasks = [];\n\n      for (const taskKey in tasksObj) {\n        loadedTasks.push({ id: taskKey, text: tasksObj[taskKey].text });\n      }\n\n      setTasks(loadedTasks);\n    };\n\n    fetchTasks(requestConfig, transformTasks);\n  }, [fetchTasks]);\n\n  const taskAddHandler = (task) => {\n    setTasks((prevTasks) => prevTasks.concat(task));\n  };\n\n  return (\n    <React.Fragment>\n      <NewTask onAddTask={taskAddHandler} />\n      <Tasks\n        items={tasks}\n        loading={isLoading}\n        error={error}\n        onFetch={fetchTasks}\n      />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}